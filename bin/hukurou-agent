#!/usr/bin/env ruby

# Hukurou - Another monitoring tool, the modern way.
# Copyleft 2015 - Nicolas AGIUS <nicolas.agius@lps-it.fr>
#
################################################################################
#
# This file is part of Hukurou.
#
# Hukurou is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
################################################################################

unless $:.include?(File.dirname(__FILE__) + "/../lib/")
	$: << File.dirname(__FILE__) + "/../lib"
end

require 'hukurou/agent'

Hukurou::Agent::Config.load()

# Putting this as global because of EventMachine variable scope issue
$workers = Hukurou::Agent::Workers.new

def handle_signal(sig)
	# Use add_timer to avoid trap conflict with Ruby 2.0
	# https://github.com/eventmachine/eventmachine/issues/418
	EM.add_timer(0) {
		case sig
			when :HUP
				$log.info "Reloading config from server..."
				Hukurou::Agent::API::get_config($workers)
			when :INT, :TERM
				$workers.stop_workers()
				$log.info "Stopping agent..."
				EM.stop
		end
	}
end

# Start main loop
EM.run {
	$log.info "Starting agent..."
	Hukurou::Agent::API::get_config($workers)

	# Setup signal trap
	[:INT, :TERM, :HUP].each { |sig|
		Signal.trap(sig) {
			handle_signal(sig)
		}
	}
}

# vim: ts=4:sw=4:ai:noet
